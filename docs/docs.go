// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/translation": {
            "post": {
                "tags": [
                    "Translation"
                ],
                "summary": "Create or update translation",
                "operationId": "submitTranslation",
                "parameters": [
                    {
                        "description": "translation details",
                        "name": "translation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmitTranslationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubmitTranslationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vote": {
            "post": {
                "tags": [
                    "Translation"
                ],
                "summary": "Vote for or against translation",
                "operationId": "vote",
                "parameters": [
                    {
                        "description": "vote details",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/word/{word}/language/{language}/confirmed-translation": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get confirmed translation",
                "operationId": "getConfirmedTranslation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "word id",
                        "name": "word",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "language",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetConfirmedTranslationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/word/{word}/language/{language}/translations": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get translations sorted by rating",
                "operationId": "getTranslations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "word id",
                        "name": "word",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "language",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next translations",
                        "name": "continuation-token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetTranslationsResponse"
                        },
                        "headers": {
                            "continuation-token": {
                                "type": "string",
                                "description": "continuation token"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "GetConfirmedTranslationResponse": {
            "type": "object",
            "properties": {
                "translation": {
                    "type": "object",
                    "$ref": "#/definitions/Translation"
                }
            }
        },
        "GetTranslationsResponse": {
            "type": "object",
            "properties": {
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Translation"
                    }
                }
            }
        },
        "SubmitTranslationRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 150
                },
                "language": {
                    "type": "string",
                    "example": "en"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "signature": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "word": {
                    "type": "integer",
                    "maximum": 3939
                }
            }
        },
        "SubmitTranslationResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "resCode": {
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        4
                    ]
                },
                "translationId": {
                    "type": "string"
                }
            }
        },
        "Translation": {
            "type": "object",
            "properties": {
                "confirmed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "downVotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "upVotes": {
                    "type": "integer"
                }
            }
        },
        "VoteRequest": {
            "type": "object",
            "properties": {
                "signature": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "translationId": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                }
            }
        },
        "VoteResponse": {
            "type": "object",
            "properties": {
                "downVotes": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "resCode": {
                    "type": "integer",
                    "enum": [
                        0,
                        3,
                        4,
                        5
                    ]
                },
                "upVotes": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
