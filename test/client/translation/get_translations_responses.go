// Code generated by go-swagger; DO NOT EDIT.

package translation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/idena-network/idena-translation/test/models"
)

// GetTranslationsReader is a Reader for the GetTranslations structure.
type GetTranslationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTranslationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTranslationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTranslationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTranslationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTranslationsOK creates a GetTranslationsOK with default headers values
func NewGetTranslationsOK() *GetTranslationsOK {
	return &GetTranslationsOK{}
}

/*GetTranslationsOK handles this case with default header values.

OK
*/
type GetTranslationsOK struct {
	/*continuation token
	 */
	ContinuationToken string

	Payload *models.GetTranslationsResponse
}

func (o *GetTranslationsOK) Error() string {
	return fmt.Sprintf("[GET /word/{word}/language/{language}/translations][%d] getTranslationsOK  %+v", 200, o.Payload)
}

func (o *GetTranslationsOK) GetPayload() *models.GetTranslationsResponse {
	return o.Payload
}

func (o *GetTranslationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header continuation-token
	o.ContinuationToken = response.GetHeader("continuation-token")

	o.Payload = new(models.GetTranslationsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTranslationsBadRequest creates a GetTranslationsBadRequest with default headers values
func NewGetTranslationsBadRequest() *GetTranslationsBadRequest {
	return &GetTranslationsBadRequest{}
}

/*GetTranslationsBadRequest handles this case with default header values.

Bad Request
*/
type GetTranslationsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetTranslationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /word/{word}/language/{language}/translations][%d] getTranslationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTranslationsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTranslationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTranslationsInternalServerError creates a GetTranslationsInternalServerError with default headers values
func NewGetTranslationsInternalServerError() *GetTranslationsInternalServerError {
	return &GetTranslationsInternalServerError{}
}

/*GetTranslationsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetTranslationsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetTranslationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /word/{word}/language/{language}/translations][%d] getTranslationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTranslationsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTranslationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
