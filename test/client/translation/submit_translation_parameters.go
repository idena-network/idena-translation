// Code generated by go-swagger; DO NOT EDIT.

package translation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/idena-network/idena-translation/test/models"
)

// NewSubmitTranslationParams creates a new SubmitTranslationParams object
// with the default values initialized.
func NewSubmitTranslationParams() *SubmitTranslationParams {
	var ()
	return &SubmitTranslationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSubmitTranslationParamsWithTimeout creates a new SubmitTranslationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSubmitTranslationParamsWithTimeout(timeout time.Duration) *SubmitTranslationParams {
	var ()
	return &SubmitTranslationParams{

		timeout: timeout,
	}
}

// NewSubmitTranslationParamsWithContext creates a new SubmitTranslationParams object
// with the default values initialized, and the ability to set a context for a request
func NewSubmitTranslationParamsWithContext(ctx context.Context) *SubmitTranslationParams {
	var ()
	return &SubmitTranslationParams{

		Context: ctx,
	}
}

// NewSubmitTranslationParamsWithHTTPClient creates a new SubmitTranslationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSubmitTranslationParamsWithHTTPClient(client *http.Client) *SubmitTranslationParams {
	var ()
	return &SubmitTranslationParams{
		HTTPClient: client,
	}
}

/*SubmitTranslationParams contains all the parameters to send to the API endpoint
for the submit translation operation typically these are written to a http.Request
*/
type SubmitTranslationParams struct {

	/*Translation
	  translation details

	*/
	Translation *models.SubmitTranslationRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the submit translation params
func (o *SubmitTranslationParams) WithTimeout(timeout time.Duration) *SubmitTranslationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the submit translation params
func (o *SubmitTranslationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the submit translation params
func (o *SubmitTranslationParams) WithContext(ctx context.Context) *SubmitTranslationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the submit translation params
func (o *SubmitTranslationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the submit translation params
func (o *SubmitTranslationParams) WithHTTPClient(client *http.Client) *SubmitTranslationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the submit translation params
func (o *SubmitTranslationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTranslation adds the translation to the submit translation params
func (o *SubmitTranslationParams) WithTranslation(translation *models.SubmitTranslationRequest) *SubmitTranslationParams {
	o.SetTranslation(translation)
	return o
}

// SetTranslation adds the translation to the submit translation params
func (o *SubmitTranslationParams) SetTranslation(translation *models.SubmitTranslationRequest) {
	o.Translation = translation
}

// WriteToRequest writes these params to a swagger request
func (o *SubmitTranslationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Translation != nil {
		if err := r.SetBodyParam(o.Translation); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
