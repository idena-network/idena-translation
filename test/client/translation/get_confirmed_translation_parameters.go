// Code generated by go-swagger; DO NOT EDIT.

package translation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetConfirmedTranslationParams creates a new GetConfirmedTranslationParams object
// with the default values initialized.
func NewGetConfirmedTranslationParams() *GetConfirmedTranslationParams {
	var ()
	return &GetConfirmedTranslationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfirmedTranslationParamsWithTimeout creates a new GetConfirmedTranslationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConfirmedTranslationParamsWithTimeout(timeout time.Duration) *GetConfirmedTranslationParams {
	var ()
	return &GetConfirmedTranslationParams{

		timeout: timeout,
	}
}

// NewGetConfirmedTranslationParamsWithContext creates a new GetConfirmedTranslationParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConfirmedTranslationParamsWithContext(ctx context.Context) *GetConfirmedTranslationParams {
	var ()
	return &GetConfirmedTranslationParams{

		Context: ctx,
	}
}

// NewGetConfirmedTranslationParamsWithHTTPClient creates a new GetConfirmedTranslationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetConfirmedTranslationParamsWithHTTPClient(client *http.Client) *GetConfirmedTranslationParams {
	var ()
	return &GetConfirmedTranslationParams{
		HTTPClient: client,
	}
}

/*GetConfirmedTranslationParams contains all the parameters to send to the API endpoint
for the get confirmed translation operation typically these are written to a http.Request
*/
type GetConfirmedTranslationParams struct {

	/*Language
	  language

	*/
	Language string
	/*Word
	  word id

	*/
	Word int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get confirmed translation params
func (o *GetConfirmedTranslationParams) WithTimeout(timeout time.Duration) *GetConfirmedTranslationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get confirmed translation params
func (o *GetConfirmedTranslationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get confirmed translation params
func (o *GetConfirmedTranslationParams) WithContext(ctx context.Context) *GetConfirmedTranslationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get confirmed translation params
func (o *GetConfirmedTranslationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get confirmed translation params
func (o *GetConfirmedTranslationParams) WithHTTPClient(client *http.Client) *GetConfirmedTranslationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get confirmed translation params
func (o *GetConfirmedTranslationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLanguage adds the language to the get confirmed translation params
func (o *GetConfirmedTranslationParams) WithLanguage(language string) *GetConfirmedTranslationParams {
	o.SetLanguage(language)
	return o
}

// SetLanguage adds the language to the get confirmed translation params
func (o *GetConfirmedTranslationParams) SetLanguage(language string) {
	o.Language = language
}

// WithWord adds the word to the get confirmed translation params
func (o *GetConfirmedTranslationParams) WithWord(word int64) *GetConfirmedTranslationParams {
	o.SetWord(word)
	return o
}

// SetWord adds the word to the get confirmed translation params
func (o *GetConfirmedTranslationParams) SetWord(word int64) {
	o.Word = word
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfirmedTranslationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param language
	if err := r.SetPathParam("language", o.Language); err != nil {
		return err
	}

	// path param word
	if err := r.SetPathParam("word", swag.FormatInt64(o.Word)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
